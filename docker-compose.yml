version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - APP_ENV=production
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - QUEUE_CONNECTION=database
    volumes:
      - ./storage:/var/www/storage
    networks:
      - laravel
    ports:
      - "8000:9000"

  queue:
    build:
      context: .
      dockerfile: Dockerfile.queue
    container_name: laravel-queue
    restart: unless-stopped
    depends_on:
      - db
      - app
    environment:
      - APP_ENV=production
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - QUEUE_CONNECTION=database
    volumes:
      - ./storage:/var/www/storage
    networks:
      - laravel

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: laravel-scheduler
    restart: unless-stopped
    depends_on:
      - db
      - app
    environment:
      - APP_ENV=production
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - QUEUE_CONNECTION=database
    volumes:
      - ./storage:/var/www/storage
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_USER=laravel
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel
    ports:
      - "3306:3306"

volumes:
  db_data:

networks:
  laravel:
    driver: bridge
